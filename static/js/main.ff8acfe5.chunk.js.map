{"version":3,"sources":["demo/demo.tsx","index.tsx"],"names":["InitialConfig","AntdConfig","config","fields","product","label","type","valueSources","fieldSettings","listValues","value","title","status","min","preferWidgets","paymentStatus","ixigoAssured","defaultValue","mainWidgetProps","labelYes","labelNo","paymentMode","refundStatus","refundMode","client","travelDateDuration","max","funcs","queryValue","id","QbUtils","uuid","Demo","useState","tree","checkTree","loadTree","state","setState","onChange","immutableTree","jsonTree","getTree","console","log","renderBuilder","props","className","style","padding","JSON","stringify","queryString","jsonLogicFormat","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ff8acfe5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Query, Builder, Utils as QbUtils } from \"react-awesome-query-builder\";\n// types\nimport {\n  JsonGroup,\n  Config,\n  ImmutableTree,\n  BuilderProps\n} from \"react-awesome-query-builder\";\n\n// For AntDesign widgets only:\nimport AntdConfig from \"react-awesome-query-builder/lib/config/antd\";\nimport \"antd/dist/antd.css\"; // or import \"react-awesome-query-builder/css/antd.less\";\n// For Material-UI widgets only:\n//import MaterialConfig from \"react-awesome-query-builder/lib/config/material\";\n\nimport \"react-awesome-query-builder/lib/css/styles.css\";\nimport \"react-awesome-query-builder/lib/css/compact_styles.css\"; //optional, for more compact styles\n\n// Choose your skin (ant/material/vanilla):\nconst InitialConfig = AntdConfig; // or MaterialConfig or BasicConfig\n\n// You need to provide your own config. See below 'Config format'\nconst config: Config = {\n  ...InitialConfig,\n  fields: {\n    product: {\n      label: \"Product\",\n      type: \"select\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        listValues: [\n          { value: \"TRAIN\", title: \"Train\" },\n          { value: \"BUS\", title: \"Bus\" },\n          { value: \"FLIGHT\", title: \"Flight\" }\n        ]\n      }\n    },\n    status: {\n      label: \"Booking Status\",\n      type: \"text\",\n      fieldSettings: {\n        min: 0\n      },\n      valueSources: [\"value\"],\n      preferWidgets: [\"text\"]\n    },\n    paymentStatus: {\n      label: \"Payment Status\",\n      type: \"text\",\n      fieldSettings: {\n        min: 0\n      },\n      valueSources: [\"value\"],\n      preferWidgets: [\"text\"]\n    },\n    ixigoAssured: {\n      label: \"Ixigo Assured\",\n      type: \"boolean\",\n      defaultValue: true,\n      mainWidgetProps: {\n        labelYes: \"+\",\n        labelNo: \"-\"\n      }\n    },\n    paymentMode: {\n      label: \"Payment Mode\",\n      type: \"select\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        listValues: [\n          { value: \"UPI\", title: \"UPI\" },\n          { value: \"CARD\", title: \"Card\" },\n          { value: \"NET_BANKING\", title: \"Net Banking\" },\n          { value: \"WALLET\", title: \"Wallet\" },\n          { value: \"IIM\", title: \"IIM\" },\n          { value: \"IIM_MONEY_MAX\", title: \"IIM Money Max\" }\n        ]\n      }\n    },\n    refundStatus: {\n      label: \"Refund Status\",\n      type: \"select\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        listValues: [\n          { value: \"SUCESS\", title: \"Sucess\" },\n          { value: \"FAILED\", title: \"Failed\" },\n          { value: \"PENDING\", title: \"Pending\" },\n          { value: \"CANCELLED\", title: \"Cancelled\" }\n        ]\n      }\n    },\n    refundMode: {\n      label: \"Refund Mode\",\n      type: \"select\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        listValues: [\n          { value: \"INSTANT\", title: \"Instant\" },\n          { value: \"REGULAR\", title: \"Regular\" },\n          { value: \"IIM\", title: \"IIM\" },\n          { value: \"IIM_MONEY_MAX\", title: \"IIM Money Max\" }\n        ]\n      }\n    },\n    client: {\n      label: \"Client\",\n      type: \"select\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        listValues: [\n          { value: \"IXIMATR\", title: \"Train Android\" },\n          { value: \"IXIMAIO\", title: \"Flight Ios\" },\n          { value: \"IXIMAAD\", title: \"Flight Android\" },\n          { value: \"IXITRIO\", title: \"Train Ios\" },\n          { value: \"IXIWEB\", title: \"Web\" },\n          { value: \"IXIMWED\", title: \"Mobile Web\" }\n        ]\n      }\n    },\n    travelDateDuration: {\n      label: \"Travel Date Duration (days)\",\n      type: \"number\",\n      preferWidgets: [\"number\"],\n      fieldSettings: {\n        min: -100,\n        max: 500\n      },\n      funcs: [\"LINEAR_REGRESSION\"]\n    }\n  }\n};\n\n// You can load query value from your backend storage (for saving see `Query.onChange()`)\nconst queryValue: JsonGroup = { id: QbUtils.uuid(), type: \"group\" };\n\nexport const Demo: React.FC = () => {\n  const [state, setState] = useState({\n    tree: QbUtils.checkTree(QbUtils.loadTree(queryValue), config),\n    config: config\n  });\n\n  const onChange = (immutableTree: ImmutableTree, config: Config) => {\n    // Tip: for better performance you can apply `throttle` - see `examples/demo`\n    setState({ tree: immutableTree, config: config });\n\n    const jsonTree = QbUtils.getTree(immutableTree);\n    console.log(jsonTree);\n    // `jsonTree` can be saved to backend, and later loaded to `queryValue`\n  };\n\n  const renderBuilder = (props: BuilderProps) => (\n    <div className=\"query-builder-container\" style={{ padding: \"10px\" }}>\n      <div className=\"query-builder qb-lite\">\n        <Builder {...props} />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <Query\n        {...config}\n        value={state.tree}\n        onChange={onChange}\n        renderBuilder={renderBuilder}\n      />\n      <div className=\"query-builder-result\">\n        <div>\n          Query string:{\" \"}\n          <pre>\n            {JSON.stringify(QbUtils.queryString(state.tree, state.config))}\n          </pre>\n        </div>\n        <div>\n          JsonLogic:{\" \"}\n          <pre>\n            {JSON.stringify(QbUtils.jsonLogicFormat(state.tree, state.config))}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Demo } from \"./demo/demo\";\n\n// import 'react-awesome-query-builder/css/antd.less'; // need to enable LESS loader\nimport \"antd/dist/antd.css\";\nimport \"react-awesome-query-builder/lib/css/styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Demo />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}